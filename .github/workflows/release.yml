name: release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      QUIZ_ME_UP_GITHUB_TOKEN: ${{ secrets.QUIZ_ME_UP_GITHUB_TOKEN }}
    steps:
      - name: Checkout project directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate next version
        id: next_version
        uses: quiz-me-up/reusable-workflow/.github/actions/next-version@master
        with:
          release_type: ${{ github.event.inputs.release_type }}
          fallback_version: '1.0.0'

      - name: Setup java-maven
        uses: quiz-me-up/reusable-workflow/.github/actions/setup-java-maven@master

      - name: Update pom.xml versions
        run: mvn versions:set -DnewVersion=${{ steps.next_version.outputs.version }} -DprocessAllModules=true -DgenerateBackupPoms=false

      - name: Deploy to github packages
        run: mvn clean deploy

      - name: Publish docker image to docker hub
        uses: quiz-me-up/reusable-workflow/.github/actions/publish-docker-image@master
        with:
          image_name: user
          image_tag: ${{ steps.next_version.outputs.version }}
          dockerhub_username: ${{ secrets.QUIZ_ME_UP_DOCKER_USERNAME }}
          dockerhub_token: ${{ secrets.QUIZ_ME_UP_DOCKER_TOKEN }}
          target_dir: 'user-infrastructure/target'

      - name: Setup git bot user
        uses: quiz-me-up/reusable-workflow/.github/actions/setup-git-bot-user@master

      - name: Create Tag
        run: |
          git add .
          git commit --allow-empty -m "ci: release ${{ steps.next_version.outputs.full_version }}"
          git tag -a ${{ steps.next_version.outputs.full_version }} -m "release: ${{ steps.next_version.outputs.full_version }}"
          git push origin master --follow-tags

      - name: Check if previous tag exists
        id: check_tags
        run: |
          # Check if there are at least 2 tags
          tag_count=$(git tag | wc -l)
          if [ $tag_count -ge 2 ]; then
            echo "has_previous_tag=true" >> $GITHUB_OUTPUT
          else
            echo "has_previous_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Create changelog
        id: changelog
        if: steps.check_tags.outputs.has_previous_tag == 'true'
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.QUIZ_ME_UP_GITHUB_TOKEN }}
          tag: ${{ steps.next_version.outputs.full_version }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.QUIZ_ME_UP_GITHUB_TOKEN }}
          tag_name: ${{ steps.next_version.outputs.full_version }}
          name: Release ${{ steps.next_version.outputs.full_version }}
          body: ${{ steps.check_tags.outputs.has_previous_tag == 'true' && steps.changelog.outputs.changes || 'Initial release - no previous changelog available.' }}
